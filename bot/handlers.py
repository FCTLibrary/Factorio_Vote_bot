from pyrogram import Client, filters
from pyrogram.types import Message, CallbackQuery
from .config import GROUP1_ID, GROUP2_ID, MODERATOR_IDS
from .storage import add_message, get_original_id, remove_message
from .keyboards import action_keyboard

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –±—ã–ª–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω—ã
forwarded_cache = set()

async def on_reaction(client: Client, message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω–∞—è –≥—Ä—É–ø–ø–∞ –∏ –Ω—É–∂–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è
    if message.chat.id != GROUP1_ID:
        return
    if not hasattr(message, "reactions") or not message.reactions:
        return
    for reaction in message.reactions:
        if getattr(reaction, "emoji", None) == "üëé":
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –ø–µ—Ä–µ—Å—ã–ª–∞–ª–∏
            if message.id in forwarded_cache:
                return
            fwd = await message.forward(GROUP2_ID)
            await fwd.reply(
                "–ú–æ–¥–µ—Ä–∞—Ü–∏—è: —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø–µ?",
                reply_markup=action_keyboard()
            )
            add_message(message.id, fwd.id)
            forwarded_cache.add(message.id)
            break

async def on_callback(client: Client, callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    if user_id not in MODERATOR_IDS:
        await callback_query.answer("–ù–µ—Ç –ø—Ä–∞–≤.", show_alert=True)
        return

    forwarded_msg_id = callback_query.message.id
    original_msg_id = get_original_id(forwarded_msg_id)

    if callback_query.data == "delete":
        if original_msg_id:
            try:
                await client.delete_messages(GROUP1_ID, original_msg_id)
            except Exception as e:
                await callback_query.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏!", show_alert=True)
                return
        await callback_query.edit_message_text("–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø–µ.")
        remove_message(forwarded_msg_id)

    elif callback_query.data == "cancel":
        await callback_query.message.delete()
        remove_message(forwarded_msg_id)